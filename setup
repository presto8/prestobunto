#!/usr/bin/env bash

INSTALL_USER="user"

# NOTE! You probably want to change the key below to your own key
REMOTE_ACCESS_PUBKEY="ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOF7pdrlAiVSJaaynnpEJJ3/1jAmtrPUSNP7/pHIg7bF phunt@agnate"

main() {
    set -e -x
    HOME=/home/$INSTALL_USER
    UBUNTU_VERSION=$(grep RELEASE /etc/lsb-release | grep -Eo '[0-9.]+')

    update_check

    require_root
    fail_if_no_user
    fail_if_too_many_users

    configure_apt
    setup_zsh
    setup_ssh
    setup_screen
    setup_git
    setup_vim
    install_packages
    install_ripgrep
    install_fd
    configure_system
    configure_network eno1
    disable_automatic_updates
    disable_unwanted_services
    cleanup_user_home
    configure_gnome_settings
    disable_suspend_on_lid_closed
    configure_x11vnc_remote_access
    disable_graphical_grub
    cloudflare_dns

    echo; echo "prestobuntu setup complete!"
}

require_root() {
    if (( UID != 0 )); then
        echo "must run as root"
        echo "tip: sudo ./setup"
        exit 1
    fi
}

fail_if_no_user() {
    if ! id -u $INSTALL_USER &>/dev/null; then
        : cowardly refusing to run since "$INSTALL_USER" account does not exist
        exit 1
    fi
}

fail_if_too_many_users() {
    local home
    home=$(echo /home/*)
    if [[ "$home" != "/home/$INSTALL_USER" ]]; then
        : cowardly refusing to run since /home directory is not as we expected
        exit 2
    fi
}

install_package() {
    if ! dpkg -s "$1" | grep -q "Status: install ok installed"; then
        echo "installing $1"
        apt install -y "$1"
    fi
}

remove_package() {
    if ! dpkg -s "$1" 2>&1 | grep -q "is not installed"; then
        echo "uninstalling $1"
        apt purge -y "$1"
    fi
}

configure_apt() {
    : kill running apt
    while pgrep -f 'apt|aptd'; do
        pkill -f 'apt|aptd' ||:
        sleep 0.1
    done

    if [[ $UBUNTU_VERSION -le 16 ]]; then
        : "Add repo needed for vim8"
        if [[ ! -f /etc/apt/sources.list.d/jonathonf-ubuntu-vim-xenial.list ]]; then
            add-apt-repository ppa:jonathonf/vim -y
        fi
    fi

    : Update apt
    apt update
}

configure_system() {
    if ! grep -q NOPASSWD /etc/sudoers; then
        : Allow sudo without password
        sed -E -i.bak 's|^(%sudo.+ALL:ALL\)) (ALL)|\1 NOPASSWD: \2|' /etc/sudoers
    fi

    if ! grep -q ctrl:nocaps /etc/default/keyboard; then
        : Remap CapsLock key as Ctrl
        sed -E -i.bak 's|^(XKBOPTIONS=")(")|\1ctrl:nocaps\2|' /etc/default/keyboard
    fi

    : make journald persistent
    mkdir -p /var/log/journal

    : configure motd to remove update messages
    (cd /etc/update-motd.d
     chmod -x 10-help-text 90-updates-available 91-release-upgrade)
}

configure_network() {
    if grep -q prestobuntu /etc/network/interfaces; then
        return
    fi

    cat >>/etc/network/interfaces <<EOF

# added by prestobuntu
auto $1
iface $1 inet static
address 192.168.250.40/24

auto $1:1
iface $1:1 inet dhcp
EOF
}

as_user() {
    sudo -u $INSTALL_USER "$@"
}

setup_ssh() {
    install_package openssh-server

    as_user mkdir -p $HOME/.ssh --mode 700
    as_user touch $HOME/.ssh/authorized_keys
    _require_line "$REMOTE_ACCESS_PUBKEY" $HOME/.ssh/authorized_keys
    chmod 600 $HOME/.ssh/authorized_keys

    # make sure this system has ssh keys
    ! test -f ~/.ssh/id_rsa && ssh-keygen -f "$_" -N ""
}

setup_git() {
    install_package git
    get_prestobuntu_file gitconfig $HOME/.gitconfig
}

get_internet_file() {
    as_user wget "$1" --output-document "$2"
}

get_prestobuntu_file() {
    base="https://raw.githubusercontent.com/presto8/prestobuntu/master"
    get_internet_file "$base/$1" "$2"
}

setup_zsh() {
    install_package zsh
    chsh -s /usr/bin/zsh $INSTALL_USER

    get_prestobuntu_file zshrc $HOME/.zshrc
    get_internet_file "https://raw.githubusercontent.com/nojhan/liquidprompt/master/liquidprompt" $HOME/.liquidprompt
    # change some colors to look better with dark background
    _sed "    LP_COLOR_SSH=.*" "    LP_COLOR_SSH=\$BOLD_WHITE" $HOME/.liquidprompt
}

setup_screen() {
    install_package screen

    as_user tee $HOME/.screenrc <<'EOF'
startup_message off
hardstatus alwayslastline
hardstatus string '%{= Kd} %{= Kd}%-w%{= Kr}[%{= KW}%n %t%{= Kr}]%{= Kd}%+w %-= %{KG} %H%{KW}|%{KY}%101`%{KW}|%D %M %d%{= Kc} %C%A%{-}'
EOF
}

install_packages() {
    install_package exuberant-ctags
    install_package flake8
    install_package python3-pip
    hash -r
}

install_ripgrep() {
    # ripgrep not available via apt install so have to install this way
    get_internet_file "https://github.com/BurntSushi/ripgrep/releases/download/11.0.2/ripgrep_11.0.2_amd64.deb" /tmp/ripgrep.deb
    dpkg -i "$_"
}

install_fd() {
    if [[ $UBUNTU_VERSION -ge 19 ]]; then
        install_package fd-find
    else
        get_internet_file https://github.com/sharkdp/fd/releases/download/v8.1.1/fd_8.1.1_amd64.deb /tmp/fd.deb
        dpkg -i "$_"
    fi
}

setup_vim() {
    install_package vim-gtk3

    local autoload=$HOME/.vim/autoload
    as_user mkdir -p $autoload

    get_internet_file "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim" $autoload/plug.vim
    get_prestobuntu_file vimrc $HOME/.vim/vimrc

    as_user vim +'PlugInstall --sync' +qa
}

disable_unwanted_services() {
    systemctl disable --now cups cups-browsed
    systemctl disable --now whoopsie
    systemctl disable --now avahi-daemon ||:
}

disable_graphical_grub() {
    sed -E -i.bak 's|^(GRUB_CMDLINE_LINUX_DEFAULT=")quiet splash(")|\1\2|' /etc/default/grub
    update-grub
}

_sed() {
    local from=$1 to=$2 file=$3
    sed -E -i.bak "s|$from|$to|g" "$file"
}

_require_line() {
    # adds line if not present
    local line="$1" file="$2"
    if ! grep --line-regexp --fixed-strings "$line" "$file" &>/dev/null; then
        echo "$line" >>"$file"
    fi
}

cloudflare_dns() {
    : configure CloudFlare to take priority over DHCP provided DNS
    local resolv
    resolv=$(head -1 /etc/resolv.conf)
    if [[ $resolv =~ resolvconf ]]; then
        _require_line "nameserver 1.1.1.1" /etc/resolvconf/resolv.conf.d/head
    elif [[ $resolv =~ systemd-resolved ]]; then
        _sed "^#DNS=" "DNS=1.1.1.1" /etc/systemd/resolved.conf
        systemctl restart systemd-resolved
    fi
}

disable_automatic_updates() {
    systemctl disable --now apt-daily.timer
    systemctl disable --now unattended-upgrades

    sed -E -i.bak 's|"1"|"0"|' /etc/apt/apt.conf.d/10periodic
    sed -E -i.bak 's|"1"|"0"|' /etc/apt/apt.conf.d/20auto-upgrades

    chmod -x /etc/apt/apt.conf.d/99update-notifier
}

cleanup_user_home() {
    find /home/$INSTALL_USER -type d -empty -delete ||:
    find /home/$INSTALL_USER -name examples.desktop -delete ||:
}

configure_gnome_settings() {
    gsettings="sudo -u $INSTALL_USER -H dbus-launch gsettings"
    $gsettings set org.gnome.desktop.wm.preferences focus-mode 'sloppy'
    $gsettings set org.gnome.desktop.screensaver lock-enabled false
    $gsettings set org.gnome.desktop.screensaver ubuntu-lock-on-suspend false
    $gsettings set org.gnome.desktop.peripherals.touchpad natural-scroll true
    $gsettings set org.gnome.settings-daemon.plugins.power lid-close-ac-action 'nothing'

    if [[ $UBUNTU_VERSION -le 16 ]]; then
        $gsettings set org.compiz.unityshell:/org/compiz/profiles/unity/plugins/unityshell/ launcher-hide-mode 1
    fi

    : disable ubuntu/gnome welcome wizard
    sed -E -i.bak 's|^(Exec=.*)$|# \1|' /etc/xdg/autostart/gnome-initial-setup-first-login.desktop
}

disable_suspend_on_lid_closed() {
    _require_line "HandleLidSwitch=ignore" /etc/systemd/logind.conf
    _require_line "HandleLidSwitchExternalPower=ignore" /etc/systemd/logind.conf
    systemctl restart systemd-logind
}

configure_x11vnc_remote_access() {
    install_package x11vnc
    cat >/etc/systemd/system/x11vnc.service <<EOF
[Unit]
Description=x11vnc Service
After=multi-user.target

[Service]
Type=Simple
ExecStart=/usr/bin/x11vnc -display :0 -auth /run/user/1000/gdm/Xauthority

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl enable --now x11vnc
}

update_check() {
    get_prestobuntu_file setup /tmp/setup.$(date -Is)
    if ! diff setup "$_" &>/dev/null; then
        echo "A newer setup file may be available: $_"
        echo "Cowardly refusing to proceed..."
        exit 100
    fi
}

main "$@"
